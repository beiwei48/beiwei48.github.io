<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[beiwei48 blog]]></title>
  <link href="http://beiwei48.com/atom.xml" rel="self"/>
  <link href="http://beiwei48.com/"/>
  <updated>2016-09-18T23:32:34+08:00</updated>
  <id>http://beiwei48.com/</id>
  <author>
    <name><![CDATA[Bei Wei48]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Golang Package List]]></title>
    <link href="http://beiwei48.com/blog/2016/09/18/golang-package-list/"/>
    <updated>2016-09-18T00:00:00+08:00</updated>
    <id>http://beiwei48.com/blog/2016/09/18/golang-package-list</id>
    <content type="html"><![CDATA[<h2 id="section">一</h2>
<ul>
  <li>fmt 包实现了类似C语言printf和scanf的格式化I/O</li>
  <li>errors errors.New(“generate error”), fmt.Errorf();</li>
  <li>strconv 类型转换</li>
  <li>strings 字符串操作</li>
  <li>time    time包提供了时间的显示和测量用的函数.</li>
  <li>encoding 编码转换，json，xml, hex,base64..</li>
  <li>bytes包实现了用于操作 []byte 的函数</li>
</ul>

<h2 id="section-1">二</h2>
<ul>
  <li>bufio</li>
  <li>log包实现了简单的日志服务</li>
  <li>html template</li>
  <li>builtin包是go的预声明定义，包括go语言中常用的各种类型和方法声明，包括变量和常量两部分</li>
  <li>os包提供了操作系统函数的不依赖平台的接口</li>
  <li>path包 目录和文件名称读取操作</li>
</ul>

<h2 id="section-2">三</h2>
<ul>
  <li>reflect 反射</li>
  <li>regexp 正则</li>
  <li>sort 排序</li>
  <li>ioutil包 实现io读写工具函数</li>
  <li>container heap 堆</li>
  <li>container list 双向列表</li>
  <li>container ring 环形链表</li>
  <li>context包不仅实现了在程序单元之间共享状态变量的方法，同时能通过简单的方法，使我们在被调用程序单元的外部，通过设置ctx变量值，将过期或撤销这些信号传递给被调用的程序单元。在网络编程中，若存在A调用B的API, B再调用C的API，若A调用B取消，那也要取消B调用C，通过在A,B,C的API调用之间传递Context，以及判断其状态，就能解决此问题</li>
  <li>crypto包搜集了常用的密码（算法）常量。</li>
  <li>hash包实现hash算法</li>
</ul>

<h2 id="section-3">四</h2>
<ul>
  <li>math包提供了基本的数学常数和数学函数。</li>
  <li>flag包提供了一系列解析命令行参数的功能接口</li>
  <li>net包提供了可移植的网络I/O接口，包括TCP/IP、UDP、域名解析和Unix域socket。
虽然本包提供了对网络原语的访问，大部分使用者只需要Dial、Listen和Accept函数提供的基本接口；以及相关的Conn和Listener接口。crypto/tls包提供了相同的接口和类似的Dial和Listen函数。</li>
  <li>sync 包括同步机制、原子操作、对象池等，</li>
  <li>testing 用来实现测试用例和性能测试.</li>
</ul>

<h2 id="section-4">五</h2>
<ul>
  <li>syscall 它提供一些底层的系统调用</li>
  <li>suffixarrayb包通过使用内存中的后缀树实现了对数级时间消耗的子字符串搜索。</li>
  <li>text</li>
  <li>unicode</li>
  <li>unsafe 跳过类型检测</li>
  <li>其他</li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Golang Interface Hidden]]></title>
    <link href="http://beiwei48.com/blog/2016/09/13/golang-interface-hidden/"/>
    <updated>2016-09-13T00:00:00+08:00</updated>
    <id>http://beiwei48.com/blog/2016/09/13/golang-interface-hidden</id>
    <content type="html"><![CDATA[<h3 id="golang-">golang 接口为隐式实现，不存在关键字显示定义，如下示例：</h3>
<pre><code>package main

import (
	"fmt"
)

type m1 struct {
	Name string
}
func (m *m1) Write() {
	fmt.Println(m.Name)
}
func (m *m1) Read() {
	fmt.Println(m.Name + ":read")
}


type m2 struct {
	StoreName string
}
func (m *m2) Write() {
	fmt.Println(m.StoreName)
}
func (m *m2) Read() {
	fmt.Println(m.StoreName + ":read")
}

type Test interface {
	Write()
}

type Test1 interface {
	Read()
}

func Do(p Test) {
	p.Write()
}

func Do1(p Test1) {
	p.Read()
}

func main() {
	p1 := new(m1)
	p1.Name = "m1 name"
	Do(p1)
	Do1(p1)

	p2 := new(m2)
	p2.StoreName = "m2 stroename"
	Do(p2)
	Do1(p2)
}
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tool Set]]></title>
    <link href="http://beiwei48.com/blog/2016/09/06/tool-set/"/>
    <updated>2016-09-06T00:00:00+08:00</updated>
    <id>http://beiwei48.com/blog/2016/09/06/tool-set</id>
    <content type="html"><![CDATA[<p>收集常用软件</p>

<h3 id="section">编辑器</h3>
<ul>
  <li>vim (for command edit)</li>
  <li>Sublime (for html,css,js,python)</li>
  <li>Liteide (for go)</li>
  <li>PhpStorm, ZendStudio (for php)</li>
</ul>

<h3 id="section-1">开发环境</h3>
<ul>
  <li>虚拟机, vmfusion,virtual box</li>
  <li>lamp, window下wamp包，mac下 brew 安装nginx,php,mysql</li>
  <li>shell工具，iterm2</li>
</ul>

<h3 id="section-2">文档管理</h3>
<ul>
  <li>百度云，软件包，电影， 电视</li>
  <li>印象笔记, 主要记录笔记，工作</li>
  <li>代码管理, git, sourcetree</li>
  <li>绘图, xmind(流程图)</li>
</ul>

<h3 id="section-3">翻墙</h3>
<ul>
  <li>vps(Vultr)梯子</li>
  <li>shadowsocks(锐速优化)</li>
</ul>

<h3 id="section-4">搜索工具</h3>
<ul>
  <li>mac下 Alfred</li>
  <li>window下 launchy</li>
</ul>

<h3 id="section-5">数据库管理</h3>
<ul>
  <li>mac下 Sequel pro</li>
  <li>window下 navicate</li>
</ul>

<h3 id="section-6">通讯工具</h3>
<ul>
  <li>QQ, 微信</li>
  <li>远程管理 teamviewer</li>
</ul>

<h3 id="section-7">浏览器</h3>
<ul>
  <li>chrome</li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Page]]></title>
    <link href="http://beiwei48.com/blog/2016/04/24/first-page/"/>
    <updated>2016-04-24T19:55:47+08:00</updated>
    <id>http://beiwei48.com/blog/2016/04/24/first-page</id>
    <content type="html"><![CDATA[<h3 id="section">做个测试，无他</h3>
<blockquote>
  <p>念念不忘，必有回响。</p>
</blockquote>
]]></content>
  </entry>
  
</feed>
